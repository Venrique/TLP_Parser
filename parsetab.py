
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_LOGICO AND_LOGICO_CONDICIONAL ASIGNAR ASIGNAR_DIV ASIGNAR_MULT ASIGNAR_RESTA ASIGNAR_SUMA BUCLE_MIENTRAS BUCLE_PARA CADENA CARACTER CASO_CONTRARIO COMA COMILLA_DOBLE COMILLA_SIMPLE COMPARAR_DIF COMPARAR_IGUAL CONDICIONAL CORCHETE_DER CORCHETE_IZQ DECREMENTO DIR_DEFINIR DIR_INCLUIR DIR_UNDEFINIR DIVIDIR DIVISION_ENTERA ESTATICO ESTRUCTURA HACER IDENTIFICADOR INCREMENTO LLAVE_DER LLAVE_IZQ MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MODULO MULTIPLICAR NEGACION NUMERO_DECIMAL NUMERO_ENTERO OR_LOGICO OR_LOGICO_CONDICIONAL PAREN_DER PAREN_IZQ PUNTO PUNTO_COMA RESTAR RETORNAR ROMPER SUMAR TIPO_CADENA TIPO_CARACTER TIPO_DOUBLE TIPO_ENTERO TIPO_FLOTANTE TIPO_LARGO TIPO_VACIO eofprogram : SVar program\n    | SStruct SInst\n    | empty\n    empty :SInst : SVar SInst\n    | SIfElse SInst\n    | SWhile SInst\n    | SDoWhile SInst\n    | SFor SInst\n    | SRet SInst\n    | SArr SInst\n    | SBreak SInst\n    | empty\n    SOpe : AOpe ZOpeZOpe : SUMAR AOpe ZOpe\n    | RESTAR AOpe ZOpe\n    | COMPARAR_IGUAL AOpe ZOpe\n    | MAYOR_QUE AOpe ZOpe\n    | MENOR_QUE AOpe ZOpe\n    | empty\n    AOpe : COpe BOpeBOpe : MULTIPLICAR COpe BOpe\n    | DIVIDIR COpe BOpe\n    | MODULO COpe BOpe\n    | AND_LOGICO_CONDICIONAL COpe BOpe\n    | OR_LOGICO_CONDICIONAL COpe BOpe\n    | empty\n    DOpe : CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER\n    | empty\n    COpe : PAREN_IZQ SOpe PAREN_DER\n    | IDENTIFICADOR DOpe\n    | NUMERO_DECIMAL\n    | NUMERO_ENTERO\n    SVar : STipos IDENTIFICADOR FVar\n    | IDENTIFICADOR DVar\n    AVar : ASIGNAR BVar\n    | COMA IDENTIFICADOR AVar\n    | PUNTO_COMA\n    BVar : SOpe CVar\n    | IDENTIFICADOR SFunc AVar\n    CVar : PUNTO_COMA\n    | COMA BVar\n     DVar : ASIGNAR EVar\n    | PUNTO_COMA\n    EVar : SOpe PUNTO_COMA\n    | IDENTIFICADOR SFunc DVar\n    FVar : AVar\n    | PAREN_IZQ GVar\n    GVar : STipos  HVar\n    | PAREN_DER JVar\n    HVar : IDENTIFICADOR IVar\n    | IVar\n    IVar : COMA GVar\n    | PAREN_DER JVar\n    JVar : PUNTO_COMA\n    | LLAVE_IZQ SInst LLAVE_DER\n    STipos : TIPO_ENTERO\n    | TIPO_CADENA\n    | TIPO_LARGO\n    | TIPO_VACIO\n    | TIPO_CARACTER\n    | TIPO_FLOTANTE\n    | TIPO_DOUBLE\n    SFunc : PAREN_IZQ AFunc\n    | empty\n    AFunc : PAREN_DER\n    | IDENTIFICADOR BFunc\n    BFunc : COMA IDENTIFICADOR BFunc\n    | PAREN_DER\n    SIfElse : CONDICIONAL PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ AIfElseAIfElse : SInst LLAVE_DER BIfElseBIfElse : empty\n    | CASO_CONTRARIO CIfElse\n    CIfElse : LLAVE_IZQ AIfElse\n    | SIfElse\n    SRet : RETORNAR ARetARet : SOpe PUNTO_COMA\n    | CARACTER PUNTO_COMA\n    SArr : IDENTIFICADOR CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER ASIGNAR SOpe PUNTO_COMA\n    | STipos IDENTIFICADOR CORCHETE_IZQ AArr\n    AArr : NUMERO_ENTERO CORCHETE_DER BArr\n    | CORCHETE_DER CArr\n    BArr : CArr \n    | PUNTO_COMA\n    CArr : ASIGNAR LLAVE_IZQ DArrDArr : SOpe EArr\n    | CARACTER EArr\n    EArr : COMA DArr\n    | LLAVE_DER PUNTO_COMA\n    SStruct : ESTRUCTURA AStructAStruct : IDENTIFICADOR LLAVE_IZQ BStruct LLAVE_DER CStruct\n    | LLAVE_IZQ BStruct LLAVE_DER DStruct\n    BStruct : empty\n    | STipos IDENTIFICADOR FStruct\n    CStruct : PUNTO_COMA\n    | DStruct\n    DStruct : IDENTIFICADOR EStructEStruct : COMA DStruct\n    | PUNTO_COMA\n    FStruct : PUNTO_COMA BStruct\n    | CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER PUNTO_COMA BStruct\n    SWhile : BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ SInst LLAVE_DERSDoWhile : HACER LLAVE_IZQ SInst LLAVE_DER BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER PUNTO_COMASFor : BUCLE_PARA PAREN_IZQ SDecVarFor PUNTO_COMA SOpe PUNTO_COMA SAsigVarFor PAREN_DER LLAVE_IZQ SInst LLAVE_DERSAsigVarFor : IDENTIFICADOR ASIGNAR SOpeSDecVarFor : STipos IDENTIFICADOR ADecVarForADecVarFor : ASIGNAR BDecVarFor\n    | COMA BDecVarFor\n    BDecVarFor : SOpe CDecVarForCDecVarFor : COMA BDecVarFor\n    | empty\n    SBreak : ROMPER PUNTO_COMA'
    
_lr_action_items = {'IDENTIFICADOR':([0,2,3,5,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,26,32,35,36,37,38,51,52,53,55,60,64,65,66,68,69,70,71,77,84,85,86,88,89,90,91,92,95,96,97,98,99,105,106,108,112,114,117,119,126,140,142,145,146,147,148,149,150,152,153,157,158,164,166,167,168,172,173,185,186,187,189,190,192,194,195,196,197,198,199,202,203,204,205,207,210,211,215,217,219,222,223,224,229,233,234,236,237,238,242,245,246,247,248,249,250,251,253,255,],[6,6,27,34,39,-57,-58,-59,-60,-61,-62,-63,27,27,27,27,27,27,27,27,49,61,-35,73,-44,-90,61,61,27,-76,61,-112,-34,-47,110,111,-38,-43,118,127,-77,-78,61,61,61,61,61,61,61,61,61,61,-48,141,-36,-45,156,159,-80,61,-49,-52,-50,-55,27,-39,-41,110,-37,-46,159,-92,-82,61,27,27,61,61,-51,-53,-54,-42,-40,216,-91,-95,-96,-97,159,-99,-81,-83,-84,61,-70,61,227,-56,-98,-85,-79,-4,-102,61,-86,61,-87,-71,-72,61,-88,-89,-73,27,-75,-103,27,-74,-104,]),'ESTRUCTURA':([0,2,35,37,65,66,70,71,105,108,112,140,142,145,146,148,149,152,153,185,186,187,189,190,215,],[7,7,-35,-44,-34,-47,-38,-43,-48,-36,-45,-49,-52,-50,-55,-39,-41,-37,-46,-51,-53,-54,-42,-40,-56,]),'$end':([0,1,2,3,4,15,16,17,18,19,20,21,22,23,24,25,35,37,38,41,42,43,44,45,46,47,48,55,64,65,66,70,71,85,86,105,108,112,119,140,142,145,146,148,149,152,153,158,164,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,233,236,237,238,245,246,247,249,250,253,255,],[-4,0,-4,-4,-3,-1,-2,-4,-4,-4,-4,-4,-4,-4,-4,-13,-35,-44,-90,-5,-6,-7,-8,-9,-10,-11,-12,-76,-112,-34,-47,-38,-43,-77,-78,-48,-36,-45,-80,-49,-52,-50,-55,-39,-41,-37,-46,-92,-82,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,-86,-87,-71,-72,-88,-89,-73,-75,-103,-74,-104,]),'TIPO_ENTERO':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,64,65,66,67,70,71,74,85,86,105,108,112,119,140,142,143,145,146,147,148,149,152,153,158,161,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,232,233,236,237,238,245,246,247,248,249,250,251,253,255,],[8,8,8,8,8,8,8,8,8,8,8,-35,-44,-90,8,8,8,-76,-112,-34,-47,8,-38,-43,8,-77,-78,-48,-36,-45,-80,-49,-52,8,-50,-55,8,-39,-41,-37,-46,-92,8,-82,8,8,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,8,-86,-87,-71,-72,-88,-89,-73,8,-75,-103,8,-74,-104,]),'TIPO_CADENA':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,64,65,66,67,70,71,74,85,86,105,108,112,119,140,142,143,145,146,147,148,149,152,153,158,161,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,232,233,236,237,238,245,246,247,248,249,250,251,253,255,],[9,9,9,9,9,9,9,9,9,9,9,-35,-44,-90,9,9,9,-76,-112,-34,-47,9,-38,-43,9,-77,-78,-48,-36,-45,-80,-49,-52,9,-50,-55,9,-39,-41,-37,-46,-92,9,-82,9,9,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,9,-86,-87,-71,-72,-88,-89,-73,9,-75,-103,9,-74,-104,]),'TIPO_LARGO':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,64,65,66,67,70,71,74,85,86,105,108,112,119,140,142,143,145,146,147,148,149,152,153,158,161,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,232,233,236,237,238,245,246,247,248,249,250,251,253,255,],[10,10,10,10,10,10,10,10,10,10,10,-35,-44,-90,10,10,10,-76,-112,-34,-47,10,-38,-43,10,-77,-78,-48,-36,-45,-80,-49,-52,10,-50,-55,10,-39,-41,-37,-46,-92,10,-82,10,10,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,10,-86,-87,-71,-72,-88,-89,-73,10,-75,-103,10,-74,-104,]),'TIPO_VACIO':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,64,65,66,67,70,71,74,85,86,105,108,112,119,140,142,143,145,146,147,148,149,152,153,158,161,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,232,233,236,237,238,245,246,247,248,249,250,251,253,255,],[11,11,11,11,11,11,11,11,11,11,11,-35,-44,-90,11,11,11,-76,-112,-34,-47,11,-38,-43,11,-77,-78,-48,-36,-45,-80,-49,-52,11,-50,-55,11,-39,-41,-37,-46,-92,11,-82,11,11,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,11,-86,-87,-71,-72,-88,-89,-73,11,-75,-103,11,-74,-104,]),'TIPO_CARACTER':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,64,65,66,67,70,71,74,85,86,105,108,112,119,140,142,143,145,146,147,148,149,152,153,158,161,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,232,233,236,237,238,245,246,247,248,249,250,251,253,255,],[12,12,12,12,12,12,12,12,12,12,12,-35,-44,-90,12,12,12,-76,-112,-34,-47,12,-38,-43,12,-77,-78,-48,-36,-45,-80,-49,-52,12,-50,-55,12,-39,-41,-37,-46,-92,12,-82,12,12,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,12,-86,-87,-71,-72,-88,-89,-73,12,-75,-103,12,-74,-104,]),'TIPO_FLOTANTE':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,64,65,66,67,70,71,74,85,86,105,108,112,119,140,142,143,145,146,147,148,149,152,153,158,161,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,232,233,236,237,238,245,246,247,248,249,250,251,253,255,],[13,13,13,13,13,13,13,13,13,13,13,-35,-44,-90,13,13,13,-76,-112,-34,-47,13,-38,-43,13,-77,-78,-48,-36,-45,-80,-49,-52,13,-50,-55,13,-39,-41,-37,-46,-92,13,-82,13,13,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,13,-86,-87,-71,-72,-88,-89,-73,13,-75,-103,13,-74,-104,]),'TIPO_DOUBLE':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,64,65,66,67,70,71,74,85,86,105,108,112,119,140,142,143,145,146,147,148,149,152,153,158,161,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,232,233,236,237,238,245,246,247,248,249,250,251,253,255,],[14,14,14,14,14,14,14,14,14,14,14,-35,-44,-90,14,14,14,-76,-112,-34,-47,14,-38,-43,14,-77,-78,-48,-36,-45,-80,-49,-52,14,-50,-55,14,-39,-41,-37,-46,-92,14,-82,14,14,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,14,-86,-87,-71,-72,-88,-89,-73,14,-75,-103,14,-74,-104,]),'CONDICIONAL':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,64,65,66,70,71,85,86,105,108,112,119,140,142,145,146,147,148,149,152,153,158,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,233,236,237,238,239,245,246,247,248,249,250,251,253,255,],[28,28,28,28,28,28,28,28,28,-35,-44,-90,28,-76,-112,-34,-47,-38,-43,-77,-78,-48,-36,-45,-80,-49,-52,-50,-55,28,-39,-41,-37,-46,-92,-82,28,28,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,-86,-87,-71,-72,28,-88,-89,-73,28,-75,-103,28,-74,-104,]),'BUCLE_MIENTRAS':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,64,65,66,70,71,85,86,105,108,112,119,125,140,142,145,146,147,148,149,152,153,158,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,233,236,237,238,245,246,247,248,249,250,251,253,255,],[29,29,29,29,29,29,29,29,29,-35,-44,-90,29,-76,-112,-34,-47,-38,-43,-77,-78,-48,-36,-45,-80,169,-49,-52,-50,-55,29,-39,-41,-37,-46,-92,-82,29,29,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,-86,-87,-71,-72,-88,-89,-73,29,-75,-103,29,-74,-104,]),'HACER':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,64,65,66,70,71,85,86,105,108,112,119,140,142,145,146,147,148,149,152,153,158,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,233,236,237,238,245,246,247,248,249,250,251,253,255,],[30,30,30,30,30,30,30,30,30,-35,-44,-90,30,-76,-112,-34,-47,-38,-43,-77,-78,-48,-36,-45,-80,-49,-52,-50,-55,30,-39,-41,-37,-46,-92,-82,30,30,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,-86,-87,-71,-72,-88,-89,-73,30,-75,-103,30,-74,-104,]),'BUCLE_PARA':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,64,65,66,70,71,85,86,105,108,112,119,140,142,145,146,147,148,149,152,153,158,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,233,236,237,238,245,246,247,248,249,250,251,253,255,],[31,31,31,31,31,31,31,31,31,-35,-44,-90,31,-76,-112,-34,-47,-38,-43,-77,-78,-48,-36,-45,-80,-49,-52,-50,-55,31,-39,-41,-37,-46,-92,-82,31,31,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,-86,-87,-71,-72,-88,-89,-73,31,-75,-103,31,-74,-104,]),'RETORNAR':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,64,65,66,70,71,85,86,105,108,112,119,140,142,145,146,147,148,149,152,153,158,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,233,236,237,238,245,246,247,248,249,250,251,253,255,],[32,32,32,32,32,32,32,32,32,-35,-44,-90,32,-76,-112,-34,-47,-38,-43,-77,-78,-48,-36,-45,-80,-49,-52,-50,-55,32,-39,-41,-37,-46,-92,-82,32,32,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,-86,-87,-71,-72,-88,-89,-73,32,-75,-103,32,-74,-104,]),'ROMPER':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,64,65,66,70,71,85,86,105,108,112,119,140,142,145,146,147,148,149,152,153,158,164,167,168,185,186,187,189,190,194,195,196,197,199,202,203,204,207,215,217,219,222,223,224,233,236,237,238,245,246,247,248,249,250,251,253,255,],[33,33,33,33,33,33,33,33,33,-35,-44,-90,33,-76,-112,-34,-47,-38,-43,-77,-78,-48,-36,-45,-80,-49,-52,-50,-55,33,-39,-41,-37,-46,-92,-82,33,33,-51,-53,-54,-42,-40,-91,-95,-96,-97,-99,-81,-83,-84,-70,-56,-98,-85,-79,-4,-102,-86,-87,-71,-72,-88,-89,-73,33,-75,-103,33,-74,-104,]),'ASIGNAR':([6,27,34,49,73,110,111,113,115,121,122,127,151,154,155,163,191,193,227,231,],[36,36,68,68,-4,-4,68,36,-65,165,166,172,68,-64,-66,165,-67,-69,242,-68,]),'PUNTO_COMA':([6,27,33,34,49,56,57,58,59,61,62,63,72,73,83,87,93,94,100,102,104,107,109,110,111,113,115,118,128,129,130,131,132,133,134,135,136,137,138,144,151,154,155,157,159,163,170,171,174,175,176,177,178,179,180,181,182,183,184,191,193,206,212,213,214,218,228,230,231,235,240,243,],[37,37,64,70,70,85,86,-4,-4,-4,-32,-33,112,-4,126,-14,-20,-21,-27,-31,-29,146,149,-4,70,37,-29,161,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-30,146,70,-64,-66,195,199,204,211,-106,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,-67,-69,222,-107,-4,-108,232,-109,-111,-68,246,250,-110,]),'LLAVE_IZQ':([7,30,39,107,123,124,144,165,239,241,],[40,53,74,147,167,168,147,205,248,251,]),'COMA':([8,9,10,11,12,13,14,34,49,58,59,61,62,63,87,93,94,100,102,104,106,109,110,111,115,127,128,129,130,131,132,133,134,135,136,137,138,141,151,154,155,156,159,174,175,176,177,178,179,180,181,182,183,184,191,193,213,216,220,221,231,],[-57,-58,-59,-60,-61,-62,-63,69,69,-4,-4,-4,-32,-33,-14,-20,-21,-27,-31,-29,143,150,-4,69,-29,173,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-30,143,69,-64,-66,192,198,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,-67,-69,229,192,234,234,-68,]),'PAREN_DER':([8,9,10,11,12,13,14,58,59,61,62,63,67,80,81,87,93,94,100,101,102,104,106,114,128,129,130,131,132,133,134,135,136,137,138,141,143,156,174,175,176,177,178,179,180,181,182,183,184,216,225,226,252,],[-57,-58,-59,-60,-61,-62,-63,-4,-4,-4,-32,-33,107,123,124,-14,-20,-21,-27,138,-31,-29,144,155,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-30,144,107,193,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,193,240,241,-105,]),'LLAVE_DER':([17,18,19,20,21,22,23,24,25,35,37,40,41,42,43,44,45,46,47,48,53,55,58,59,61,62,63,64,65,66,70,71,74,75,76,82,85,86,87,93,94,100,102,104,105,108,112,116,119,128,129,130,131,132,133,134,135,136,137,138,140,142,145,146,147,148,149,152,153,160,161,164,167,168,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,200,202,203,204,207,208,209,215,219,220,221,222,223,224,232,233,236,237,238,244,245,246,247,248,249,250,251,253,254,255,],[-4,-4,-4,-4,-4,-4,-4,-4,-13,-35,-44,-4,-5,-6,-7,-8,-9,-10,-11,-12,-4,-76,-4,-4,-4,-32,-33,-112,-34,-47,-38,-43,-4,117,-93,125,-77,-78,-14,-20,-21,-27,-31,-29,-48,-36,-45,157,-80,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-30,-49,-52,-50,-55,-4,-39,-41,-37,-46,-94,-4,-82,-4,-4,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,-51,-53,-54,215,-42,-40,-100,-81,-83,-84,-70,223,224,-56,-85,235,235,-79,-4,-102,-4,-86,-87,-71,-72,-101,-88,-89,-73,-4,-75,-103,-4,-74,255,-104,]),'CORCHETE_IZQ':([27,49,61,73,110,118,],[50,78,103,103,103,162,]),'PAREN_IZQ':([28,29,31,32,34,36,49,51,52,60,68,73,88,89,90,91,92,95,96,97,98,99,110,126,150,166,169,172,173,205,210,229,234,242,],[51,52,54,60,67,60,67,60,60,60,60,114,60,60,60,60,60,60,60,60,60,60,114,60,60,60,210,60,60,60,60,60,60,60,]),'CARACTER':([32,205,234,],[57,221,221,]),'NUMERO_DECIMAL':([32,36,51,52,60,68,88,89,90,91,92,95,96,97,98,99,126,150,166,172,173,205,210,229,234,242,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'NUMERO_ENTERO':([32,36,50,51,52,60,68,78,88,89,90,91,92,95,96,97,98,99,103,126,150,162,166,172,173,205,210,229,234,242,],[63,63,79,63,63,63,63,120,63,63,63,63,63,63,63,63,63,63,139,63,63,201,63,63,63,63,63,63,63,63,]),'SUMAR':([58,59,61,62,63,73,94,100,102,104,110,115,128,129,130,131,132,133,134,135,136,137,138,179,180,181,182,183,184,],[88,-4,-4,-32,-33,-4,-21,-27,-31,-29,-4,-29,88,88,88,88,88,-4,-4,-4,-4,-4,-30,-22,-23,-24,-25,-26,-28,]),'RESTAR':([58,59,61,62,63,73,94,100,102,104,110,115,128,129,130,131,132,133,134,135,136,137,138,179,180,181,182,183,184,],[89,-4,-4,-32,-33,-4,-21,-27,-31,-29,-4,-29,89,89,89,89,89,-4,-4,-4,-4,-4,-30,-22,-23,-24,-25,-26,-28,]),'COMPARAR_IGUAL':([58,59,61,62,63,73,94,100,102,104,110,115,128,129,130,131,132,133,134,135,136,137,138,179,180,181,182,183,184,],[90,-4,-4,-32,-33,-4,-21,-27,-31,-29,-4,-29,90,90,90,90,90,-4,-4,-4,-4,-4,-30,-22,-23,-24,-25,-26,-28,]),'MAYOR_QUE':([58,59,61,62,63,73,94,100,102,104,110,115,128,129,130,131,132,133,134,135,136,137,138,179,180,181,182,183,184,],[91,-4,-4,-32,-33,-4,-21,-27,-31,-29,-4,-29,91,91,91,91,91,-4,-4,-4,-4,-4,-30,-22,-23,-24,-25,-26,-28,]),'MENOR_QUE':([58,59,61,62,63,73,94,100,102,104,110,115,128,129,130,131,132,133,134,135,136,137,138,179,180,181,182,183,184,],[92,-4,-4,-32,-33,-4,-21,-27,-31,-29,-4,-29,92,92,92,92,92,-4,-4,-4,-4,-4,-30,-22,-23,-24,-25,-26,-28,]),'MULTIPLICAR':([59,61,62,63,73,102,104,110,115,133,134,135,136,137,138,184,],[95,-4,-32,-33,-4,-31,-29,-4,-29,95,95,95,95,95,-30,-28,]),'DIVIDIR':([59,61,62,63,73,102,104,110,115,133,134,135,136,137,138,184,],[96,-4,-32,-33,-4,-31,-29,-4,-29,96,96,96,96,96,-30,-28,]),'MODULO':([59,61,62,63,73,102,104,110,115,133,134,135,136,137,138,184,],[97,-4,-32,-33,-4,-31,-29,-4,-29,97,97,97,97,97,-30,-28,]),'AND_LOGICO_CONDICIONAL':([59,61,62,63,73,102,104,110,115,133,134,135,136,137,138,184,],[98,-4,-32,-33,-4,-31,-29,-4,-29,98,98,98,98,98,-30,-28,]),'OR_LOGICO_CONDICIONAL':([59,61,62,63,73,102,104,110,115,133,134,135,136,137,138,184,],[99,-4,-32,-33,-4,-31,-29,-4,-29,99,99,99,99,99,-30,-28,]),'CORCHETE_DER':([78,79,120,139,201,],[121,122,163,184,218,]),'CASO_CONTRARIO':([223,],[239,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,15,]),'SVar':([0,2,3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[2,2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'SStruct':([0,2,],[3,3,]),'empty':([0,2,3,17,18,19,20,21,22,23,24,40,53,58,59,61,73,74,110,128,129,130,131,132,133,134,135,136,137,147,161,167,168,213,223,232,248,251,],[4,4,25,25,25,25,25,25,25,25,25,76,25,93,100,104,115,76,115,93,93,93,93,93,100,100,100,100,100,25,76,25,25,230,238,76,25,25,]),'STipos':([0,2,3,17,18,19,20,21,22,23,24,40,53,54,67,74,143,147,161,167,168,232,248,251,],[5,5,26,26,26,26,26,26,26,26,26,77,26,84,106,77,106,26,77,26,26,77,26,26,]),'SInst':([3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[16,41,42,43,44,45,46,47,48,82,188,208,209,208,254,]),'SIfElse':([3,17,18,19,20,21,22,23,24,53,147,167,168,239,248,251,],[18,18,18,18,18,18,18,18,18,18,18,18,18,249,18,18,]),'SWhile':([3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'SDoWhile':([3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'SFor':([3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'SRet':([3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SArr':([3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'SBreak':([3,17,18,19,20,21,22,23,24,53,147,167,168,248,251,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'DVar':([6,27,113,],[35,35,153,]),'AStruct':([7,],[38,]),'ARet':([32,],[55,]),'SOpe':([32,36,51,52,60,68,126,150,166,172,173,205,210,229,234,242,],[56,72,80,81,101,109,170,109,206,213,213,220,225,213,220,252,]),'AOpe':([32,36,51,52,60,68,88,89,90,91,92,126,150,166,172,173,205,210,229,234,242,],[58,58,58,58,58,58,128,129,130,131,132,58,58,58,58,58,58,58,58,58,58,]),'COpe':([32,36,51,52,60,68,88,89,90,91,92,95,96,97,98,99,126,150,166,172,173,205,210,229,234,242,],[59,59,59,59,59,59,59,59,59,59,59,133,134,135,136,137,59,59,59,59,59,59,59,59,59,59,]),'FVar':([34,49,],[65,65,]),'AVar':([34,49,111,151,],[66,66,152,190,]),'EVar':([36,],[71,]),'BStruct':([40,74,161,232,],[75,116,200,244,]),'SDecVarFor':([54,],[83,]),'ZOpe':([58,128,129,130,131,132,],[87,174,175,176,177,178,]),'BOpe':([59,133,134,135,136,137,],[94,179,180,181,182,183,]),'DOpe':([61,73,110,],[102,102,102,]),'GVar':([67,143,],[105,186,]),'BVar':([68,150,],[108,189,]),'SFunc':([73,110,],[113,151,]),'AArr':([78,],[119,]),'HVar':([106,],[140,]),'IVar':([106,141,],[142,185,]),'JVar':([107,144,],[145,187,]),'CVar':([109,],[148,]),'AFunc':([114,],[154,]),'DStruct':([117,157,198,],[158,196,217,]),'FStruct':([118,],[160,]),'CArr':([121,163,],[164,203,]),'ADecVarFor':([127,],[171,]),'BFunc':([156,216,],[191,231,]),'CStruct':([157,],[194,]),'EStruct':([159,],[197,]),'BArr':([163,],[202,]),'AIfElse':([167,248,],[207,253,]),'BDecVarFor':([172,173,229,],[212,214,243,]),'DArr':([205,234,],[219,245,]),'SAsigVarFor':([211,],[226,]),'CDecVarFor':([213,],[228,]),'EArr':([220,221,],[233,236,]),'BIfElse':([223,],[237,]),'CIfElse':([239,],[247,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> SVar program','program',2,'p_program','init.py',2),
  ('program -> SStruct SInst','program',2,'p_program','init.py',3),
  ('program -> empty','program',1,'p_program','init.py',4),
  ('empty -> <empty>','empty',0,'p_empty','parser_yacc.py',8),
  ('SInst -> SVar SInst','SInst',2,'p_Inst_S','init.py',8),
  ('SInst -> SIfElse SInst','SInst',2,'p_Inst_S','init.py',9),
  ('SInst -> SWhile SInst','SInst',2,'p_Inst_S','init.py',10),
  ('SInst -> SDoWhile SInst','SInst',2,'p_Inst_S','init.py',11),
  ('SInst -> SFor SInst','SInst',2,'p_Inst_S','init.py',12),
  ('SInst -> SRet SInst','SInst',2,'p_Inst_S','init.py',13),
  ('SInst -> SArr SInst','SInst',2,'p_Inst_S','init.py',14),
  ('SInst -> SBreak SInst','SInst',2,'p_Inst_S','init.py',15),
  ('SInst -> empty','SInst',1,'p_Inst_S','init.py',16),
  ('SOpe -> AOpe ZOpe','SOpe',2,'p_ope_S','init.py',20),
  ('ZOpe -> SUMAR AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',23),
  ('ZOpe -> RESTAR AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',24),
  ('ZOpe -> COMPARAR_IGUAL AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',25),
  ('ZOpe -> MAYOR_QUE AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',26),
  ('ZOpe -> MENOR_QUE AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',27),
  ('ZOpe -> empty','ZOpe',1,'p_ope_Z','init.py',28),
  ('AOpe -> COpe BOpe','AOpe',2,'p_ope_A','init.py',32),
  ('BOpe -> MULTIPLICAR COpe BOpe','BOpe',3,'p_ope_B','init.py',36),
  ('BOpe -> DIVIDIR COpe BOpe','BOpe',3,'p_ope_B','init.py',37),
  ('BOpe -> MODULO COpe BOpe','BOpe',3,'p_ope_B','init.py',38),
  ('BOpe -> AND_LOGICO_CONDICIONAL COpe BOpe','BOpe',3,'p_ope_B','init.py',39),
  ('BOpe -> OR_LOGICO_CONDICIONAL COpe BOpe','BOpe',3,'p_ope_B','init.py',40),
  ('BOpe -> empty','BOpe',1,'p_ope_B','init.py',41),
  ('DOpe -> CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER','DOpe',3,'p_ope_D','init.py',45),
  ('DOpe -> empty','DOpe',1,'p_ope_D','init.py',46),
  ('COpe -> PAREN_IZQ SOpe PAREN_DER','COpe',3,'p_ope_C','init.py',50),
  ('COpe -> IDENTIFICADOR DOpe','COpe',2,'p_ope_C','init.py',51),
  ('COpe -> NUMERO_DECIMAL','COpe',1,'p_ope_C','init.py',52),
  ('COpe -> NUMERO_ENTERO','COpe',1,'p_ope_C','init.py',53),
  ('SVar -> STipos IDENTIFICADOR FVar','SVar',3,'p_var_S','init.py',57),
  ('SVar -> IDENTIFICADOR DVar','SVar',2,'p_var_S','init.py',58),
  ('AVar -> ASIGNAR BVar','AVar',2,'p_var_A','init.py',62),
  ('AVar -> COMA IDENTIFICADOR AVar','AVar',3,'p_var_A','init.py',63),
  ('AVar -> PUNTO_COMA','AVar',1,'p_var_A','init.py',64),
  ('BVar -> SOpe CVar','BVar',2,'p_var_B','init.py',68),
  ('BVar -> IDENTIFICADOR SFunc AVar','BVar',3,'p_var_B','init.py',69),
  ('CVar -> PUNTO_COMA','CVar',1,'p_var_C','init.py',73),
  ('CVar -> COMA BVar','CVar',2,'p_var_C','init.py',74),
  ('DVar -> ASIGNAR EVar','DVar',2,'p_var_D','init.py',78),
  ('DVar -> PUNTO_COMA','DVar',1,'p_var_D','init.py',79),
  ('EVar -> SOpe PUNTO_COMA','EVar',2,'p_var_E','init.py',83),
  ('EVar -> IDENTIFICADOR SFunc DVar','EVar',3,'p_var_E','init.py',84),
  ('FVar -> AVar','FVar',1,'p_var_F','init.py',88),
  ('FVar -> PAREN_IZQ GVar','FVar',2,'p_var_F','init.py',89),
  ('GVar -> STipos HVar','GVar',2,'p_var_G','init.py',93),
  ('GVar -> PAREN_DER JVar','GVar',2,'p_var_G','init.py',94),
  ('HVar -> IDENTIFICADOR IVar','HVar',2,'p_var_H','init.py',98),
  ('HVar -> IVar','HVar',1,'p_var_H','init.py',99),
  ('IVar -> COMA GVar','IVar',2,'p_var_I','init.py',103),
  ('IVar -> PAREN_DER JVar','IVar',2,'p_var_I','init.py',104),
  ('JVar -> PUNTO_COMA','JVar',1,'p_var_J','init.py',108),
  ('JVar -> LLAVE_IZQ SInst LLAVE_DER','JVar',3,'p_var_J','init.py',109),
  ('STipos -> TIPO_ENTERO','STipos',1,'p_tipos_S','init.py',113),
  ('STipos -> TIPO_CADENA','STipos',1,'p_tipos_S','init.py',114),
  ('STipos -> TIPO_LARGO','STipos',1,'p_tipos_S','init.py',115),
  ('STipos -> TIPO_VACIO','STipos',1,'p_tipos_S','init.py',116),
  ('STipos -> TIPO_CARACTER','STipos',1,'p_tipos_S','init.py',117),
  ('STipos -> TIPO_FLOTANTE','STipos',1,'p_tipos_S','init.py',118),
  ('STipos -> TIPO_DOUBLE','STipos',1,'p_tipos_S','init.py',119),
  ('SFunc -> PAREN_IZQ AFunc','SFunc',2,'p_func_S','init.py',123),
  ('SFunc -> empty','SFunc',1,'p_func_S','init.py',124),
  ('AFunc -> PAREN_DER','AFunc',1,'p_func_A','init.py',128),
  ('AFunc -> IDENTIFICADOR BFunc','AFunc',2,'p_func_A','init.py',129),
  ('BFunc -> COMA IDENTIFICADOR BFunc','BFunc',3,'p_func_B','init.py',133),
  ('BFunc -> PAREN_DER','BFunc',1,'p_func_B','init.py',134),
  ('SIfElse -> CONDICIONAL PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ AIfElse','SIfElse',6,'p_if_S','init.py',138),
  ('AIfElse -> SInst LLAVE_DER BIfElse','AIfElse',3,'p_if_A','init.py',141),
  ('BIfElse -> empty','BIfElse',1,'p_if_B','init.py',144),
  ('BIfElse -> CASO_CONTRARIO CIfElse','BIfElse',2,'p_if_B','init.py',145),
  ('CIfElse -> LLAVE_IZQ AIfElse','CIfElse',2,'p_if_C','init.py',149),
  ('CIfElse -> SIfElse','CIfElse',1,'p_if_C','init.py',150),
  ('SRet -> RETORNAR ARet','SRet',2,'p_ret_S','init.py',154),
  ('ARet -> SOpe PUNTO_COMA','ARet',2,'p_ret_A','init.py',157),
  ('ARet -> CARACTER PUNTO_COMA','ARet',2,'p_ret_A','init.py',158),
  ('SArr -> IDENTIFICADOR CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER ASIGNAR SOpe PUNTO_COMA','SArr',7,'p_arr_S','init.py',162),
  ('SArr -> STipos IDENTIFICADOR CORCHETE_IZQ AArr','SArr',4,'p_arr_S','init.py',163),
  ('AArr -> NUMERO_ENTERO CORCHETE_DER BArr','AArr',3,'p_arr_A','init.py',166),
  ('AArr -> CORCHETE_DER CArr','AArr',2,'p_arr_A','init.py',167),
  ('BArr -> CArr','BArr',1,'p_arr_B','init.py',170),
  ('BArr -> PUNTO_COMA','BArr',1,'p_arr_B','init.py',171),
  ('CArr -> ASIGNAR LLAVE_IZQ DArr','CArr',3,'p_arr_C','init.py',174),
  ('DArr -> SOpe EArr','DArr',2,'p_arr_D','init.py',177),
  ('DArr -> CARACTER EArr','DArr',2,'p_arr_D','init.py',178),
  ('EArr -> COMA DArr','EArr',2,'p_arr_E','init.py',181),
  ('EArr -> LLAVE_DER PUNTO_COMA','EArr',2,'p_arr_E','init.py',182),
  ('SStruct -> ESTRUCTURA AStruct','SStruct',2,'p_struct_S','init.py',185),
  ('AStruct -> IDENTIFICADOR LLAVE_IZQ BStruct LLAVE_DER CStruct','AStruct',5,'p_struct_A','init.py',188),
  ('AStruct -> LLAVE_IZQ BStruct LLAVE_DER DStruct','AStruct',4,'p_struct_A','init.py',189),
  ('BStruct -> empty','BStruct',1,'p_struct_B','init.py',192),
  ('BStruct -> STipos IDENTIFICADOR FStruct','BStruct',3,'p_struct_B','init.py',193),
  ('CStruct -> PUNTO_COMA','CStruct',1,'p_struct_C','init.py',196),
  ('CStruct -> DStruct','CStruct',1,'p_struct_C','init.py',197),
  ('DStruct -> IDENTIFICADOR EStruct','DStruct',2,'p_struct_D','init.py',200),
  ('EStruct -> COMA DStruct','EStruct',2,'p_struct_E','init.py',203),
  ('EStruct -> PUNTO_COMA','EStruct',1,'p_struct_E','init.py',204),
  ('FStruct -> PUNTO_COMA BStruct','FStruct',2,'p_struct_F','init.py',207),
  ('FStruct -> CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER PUNTO_COMA BStruct','FStruct',5,'p_struct_F','init.py',208),
  ('SWhile -> BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ SInst LLAVE_DER','SWhile',7,'p_while_S','init.py',211),
  ('SDoWhile -> HACER LLAVE_IZQ SInst LLAVE_DER BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER PUNTO_COMA','SDoWhile',9,'p_dowhile_S','init.py',214),
  ('SFor -> BUCLE_PARA PAREN_IZQ SDecVarFor PUNTO_COMA SOpe PUNTO_COMA SAsigVarFor PAREN_DER LLAVE_IZQ SInst LLAVE_DER','SFor',11,'p_for_S','init.py',217),
  ('SAsigVarFor -> IDENTIFICADOR ASIGNAR SOpe','SAsigVarFor',3,'p_asig_var_for_S','init.py',220),
  ('SDecVarFor -> STipos IDENTIFICADOR ADecVarFor','SDecVarFor',3,'p_dec_var_for_S','init.py',224),
  ('ADecVarFor -> ASIGNAR BDecVarFor','ADecVarFor',2,'p_dec_var_for_A','init.py',227),
  ('ADecVarFor -> COMA BDecVarFor','ADecVarFor',2,'p_dec_var_for_A','init.py',228),
  ('BDecVarFor -> SOpe CDecVarFor','BDecVarFor',2,'p_dec_var_for_B','init.py',232),
  ('CDecVarFor -> COMA BDecVarFor','CDecVarFor',2,'p_dec_var_for_C','init.py',235),
  ('CDecVarFor -> empty','CDecVarFor',1,'p_dec_var_for_C','init.py',236),
  ('SBreak -> ROMPER PUNTO_COMA','SBreak',2,'p_break_S','init.py',240),
]
