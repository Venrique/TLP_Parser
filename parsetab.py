
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_LOGICO AND_LOGICO_CONDICIONAL ASIGNAR ASIGNAR_DIV ASIGNAR_MULT ASIGNAR_RESTA ASIGNAR_SUMA BUCLE_MIENTRAS BUCLE_PARA CADENA CARACTER CASO_CONTRARIO COMA COMILLA_DOBLE COMILLA_SIMPLE COMPARAR_DIF COMPARAR_IGUAL CONDICIONAL CORCHETE_DER CORCHETE_IZQ DECREMENTO DIR_DEFINIR DIR_INCLUIR DIR_UNDEFINIR DIVIDIR DIVISION_ENTERA ESTATICO ESTRUCTURA HACER IDENTIFICADOR INCREMENTO LLAVE_DER LLAVE_IZQ MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MODULO MULTIPLICAR NEGACION NUMERO_DECIMAL NUMERO_ENTERO OR_LOGICO OR_LOGICO_CONDICIONAL PAREN_DER PAREN_IZQ PUNTO PUNTO_COMA RESTAR RETORNAR ROMPER SUMAR TIPO_CADENA TIPO_CARACTER TIPO_DOUBLE TIPO_ENTERO TIPO_FLOTANTE TIPO_LARGO TIPO_VACIO eofprogram : SVar program\n    | SStruct SInst\n    | empty\n    SInst : SVar SInst\n    | SIfElse SInst\n    | SWhile SInst\n    | SDoWhile SInst\n    | SFor SInst\n    | SRet SInst\n    | SArr SInst\n    | SBreak SInst\n    | empty\n    empty :SOpe : AOpe ZOpeZOpe : SUMAR AOpe ZOpe\n    | RESTAR AOpe ZOpe\n    | COMPARAR_IGUAL AOpe ZOpe\n    | MAYOR_QUE AOpe ZOpe\n    | MENOR_QUE AOpe ZOpe\n    | empty\n    AOpe : COpe BOpeBOpe : MULTIPLICAR COpe BOpe\n    | DIVIDIR COpe BOpe\n    | MODULO COpe BOpe\n    | AND_LOGICO_CONDICIONAL COpe BOpe\n    | OR_LOGICO_CONDICIONAL COpe BOpe\n    | empty\n    DOpe : CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER\n    | empty\n    COpe : PAREN_IZQ SOpe PAREN_DER\n    | EOpe\n    | NUMERO_DECIMAL\n    | NUMERO_ENTERO\n    EOpe : IDENTIFICADOR FOpeFOpe : DOpe\n    | IDENTIFICADOR FOpe\n    | PUNTO FOpe\n    SVar : STipos IDENTIFICADOR FVar\n    | IDENTIFICADOR DVar\n    AVar : ASIGNAR BVar\n    | COMA IDENTIFICADOR AVar\n    | PUNTO_COMA\n    BVar : SOpe CVar\n    | CARACTER CVar\n    | IDENTIFICADOR SFunc AVar\n    CVar : PUNTO_COMA\n    | COMA BVar\n     DVar : ASIGNAR EVar\n    | PUNTO_COMA\n    EVar : SOpe PUNTO_COMA\n    | CARACTER PUNTO_COMA\n    | IDENTIFICADOR SFunc DVar\n    FVar : AVar\n    | PAREN_IZQ GVar\n    GVar : STipos  HVar\n    | PAREN_DER JVar\n    HVar : IDENTIFICADOR IVar\n    | IVar\n    IVar : COMA GVar\n    | PAREN_DER JVar\n    JVar : PUNTO_COMA\n    | LLAVE_IZQ SInst LLAVE_DER\n    STipos : TIPO_ENTERO\n    | TIPO_CADENA\n    | TIPO_LARGO\n    | TIPO_VACIO\n    | TIPO_CARACTER\n    | TIPO_FLOTANTE\n    | TIPO_DOUBLE\n    SFunc : PAREN_IZQ AFunc\n    | empty\n    AFunc : PAREN_DER\n    | IDENTIFICADOR BFunc\n    BFunc : COMA IDENTIFICADOR BFunc\n    | PAREN_DER\n    SIfElse : CONDICIONAL PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ AIfElseAIfElse : SInst LLAVE_DER BIfElseBIfElse : empty\n    | CASO_CONTRARIO CIfElse\n    CIfElse : LLAVE_IZQ AIfElse\n    | SIfElse\n    SRet : RETORNAR ARetARet : SOpe PUNTO_COMA\n    | CARACTER PUNTO_COMA\n    SArr : IDENTIFICADOR CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER ASIGNAR SOpe PUNTO_COMA\n    | STipos IDENTIFICADOR CORCHETE_IZQ AArr\n    AArr : NUMERO_ENTERO CORCHETE_DER BArr\n    | CORCHETE_DER CArr\n    BArr : CArr \n    | PUNTO_COMA\n    CArr : ASIGNAR LLAVE_IZQ DArrDArr : SOpe EArr\n    | CARACTER EArr\n    EArr : COMA DArr\n    | LLAVE_DER PUNTO_COMA\n    SStruct : ESTRUCTURA AStructAStruct : IDENTIFICADOR LLAVE_IZQ BStruct LLAVE_DER CStruct\n    | LLAVE_IZQ BStruct LLAVE_DER DStruct\n    BStruct : empty\n    | STipos IDENTIFICADOR FStruct\n    CStruct : PUNTO_COMA\n    | DStruct\n    DStruct : IDENTIFICADOR EStructEStruct : COMA DStruct\n    | PUNTO_COMA\n    FStruct : PUNTO_COMA BStruct\n    | CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER PUNTO_COMA BStruct\n    SWhile : BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ SInst LLAVE_DERSDoWhile : HACER LLAVE_IZQ SInst LLAVE_DER BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER PUNTO_COMASFor : BUCLE_PARA PAREN_IZQ SDecVarFor PUNTO_COMA SOpe PUNTO_COMA SAsigVarFor PAREN_DER LLAVE_IZQ SInst LLAVE_DERSAsigVarFor : IDENTIFICADOR ASIGNAR SOpeSDecVarFor : STipos IDENTIFICADOR ADecVarForADecVarFor : ASIGNAR BDecVarFor\n    | COMA BDecVarFor\n    BDecVarFor : SOpe CDecVarForCDecVarFor : COMA BDecVarFor\n    | empty\n    SBreak : ROMPER PUNTO_COMA'
    
_lr_action_items = {'IDENTIFICADOR':([0,2,3,5,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,26,32,35,36,37,38,51,52,53,55,60,64,65,66,67,69,70,71,72,75,79,86,87,88,90,91,92,93,94,97,98,99,100,101,104,107,110,111,113,116,118,119,121,124,126,133,149,151,154,155,156,157,158,159,160,162,163,167,168,174,176,177,178,182,183,195,196,197,199,200,202,204,205,206,207,208,209,212,213,214,215,217,220,221,225,227,229,232,233,234,239,243,244,246,247,248,252,255,256,257,258,259,260,261,263,265,],[6,6,27,34,39,-63,-64,-65,-66,-67,-68,-69,27,27,27,27,27,27,27,27,49,64,-39,75,-49,-96,64,64,27,-82,64,104,-118,-38,-53,116,117,-42,-48,104,125,134,-83,-84,64,64,64,64,64,64,64,64,64,64,104,104,-54,150,-40,104,-50,-51,166,169,-86,64,-55,-58,-56,-61,27,-43,-46,116,-44,-41,-52,169,-98,-88,64,27,27,64,64,-57,-59,-60,-47,-45,226,-97,-101,-102,-103,169,-105,-87,-89,-90,64,-76,64,237,-62,-104,-91,-85,-13,-108,64,-92,64,-93,-77,-78,64,-94,-95,-79,27,-81,-109,27,-80,-110,]),'ESTRUCTURA':([0,2,35,37,66,67,71,72,110,113,118,119,149,151,154,155,157,158,160,162,163,195,196,197,199,200,225,],[7,7,-39,-49,-38,-53,-42,-48,-54,-40,-50,-51,-55,-58,-56,-61,-43,-46,-44,-41,-52,-57,-59,-60,-47,-45,-62,]),'$end':([0,1,2,3,4,15,16,17,18,19,20,21,22,23,24,25,35,37,38,41,42,43,44,45,46,47,48,55,65,66,67,71,72,87,88,110,113,118,119,126,149,151,154,155,157,158,160,162,163,168,174,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,243,246,247,248,255,256,257,259,260,263,265,],[-13,0,-13,-13,-3,-1,-2,-13,-13,-13,-13,-13,-13,-13,-13,-12,-39,-49,-96,-4,-5,-6,-7,-8,-9,-10,-11,-82,-118,-38,-53,-42,-48,-83,-84,-54,-40,-50,-51,-86,-55,-58,-56,-61,-43,-46,-44,-41,-52,-98,-88,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,-92,-93,-77,-78,-94,-95,-79,-81,-109,-80,-110,]),'TIPO_ENTERO':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,65,66,67,68,71,72,76,87,88,110,113,118,119,126,149,151,152,154,155,156,157,158,160,162,163,168,171,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,242,243,246,247,248,255,256,257,258,259,260,261,263,265,],[8,8,8,8,8,8,8,8,8,8,8,-39,-49,-96,8,8,8,-82,-118,-38,-53,8,-42,-48,8,-83,-84,-54,-40,-50,-51,-86,-55,-58,8,-56,-61,8,-43,-46,-44,-41,-52,-98,8,-88,8,8,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,8,-92,-93,-77,-78,-94,-95,-79,8,-81,-109,8,-80,-110,]),'TIPO_CADENA':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,65,66,67,68,71,72,76,87,88,110,113,118,119,126,149,151,152,154,155,156,157,158,160,162,163,168,171,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,242,243,246,247,248,255,256,257,258,259,260,261,263,265,],[9,9,9,9,9,9,9,9,9,9,9,-39,-49,-96,9,9,9,-82,-118,-38,-53,9,-42,-48,9,-83,-84,-54,-40,-50,-51,-86,-55,-58,9,-56,-61,9,-43,-46,-44,-41,-52,-98,9,-88,9,9,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,9,-92,-93,-77,-78,-94,-95,-79,9,-81,-109,9,-80,-110,]),'TIPO_LARGO':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,65,66,67,68,71,72,76,87,88,110,113,118,119,126,149,151,152,154,155,156,157,158,160,162,163,168,171,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,242,243,246,247,248,255,256,257,258,259,260,261,263,265,],[10,10,10,10,10,10,10,10,10,10,10,-39,-49,-96,10,10,10,-82,-118,-38,-53,10,-42,-48,10,-83,-84,-54,-40,-50,-51,-86,-55,-58,10,-56,-61,10,-43,-46,-44,-41,-52,-98,10,-88,10,10,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,10,-92,-93,-77,-78,-94,-95,-79,10,-81,-109,10,-80,-110,]),'TIPO_VACIO':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,65,66,67,68,71,72,76,87,88,110,113,118,119,126,149,151,152,154,155,156,157,158,160,162,163,168,171,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,242,243,246,247,248,255,256,257,258,259,260,261,263,265,],[11,11,11,11,11,11,11,11,11,11,11,-39,-49,-96,11,11,11,-82,-118,-38,-53,11,-42,-48,11,-83,-84,-54,-40,-50,-51,-86,-55,-58,11,-56,-61,11,-43,-46,-44,-41,-52,-98,11,-88,11,11,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,11,-92,-93,-77,-78,-94,-95,-79,11,-81,-109,11,-80,-110,]),'TIPO_CARACTER':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,65,66,67,68,71,72,76,87,88,110,113,118,119,126,149,151,152,154,155,156,157,158,160,162,163,168,171,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,242,243,246,247,248,255,256,257,258,259,260,261,263,265,],[12,12,12,12,12,12,12,12,12,12,12,-39,-49,-96,12,12,12,-82,-118,-38,-53,12,-42,-48,12,-83,-84,-54,-40,-50,-51,-86,-55,-58,12,-56,-61,12,-43,-46,-44,-41,-52,-98,12,-88,12,12,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,12,-92,-93,-77,-78,-94,-95,-79,12,-81,-109,12,-80,-110,]),'TIPO_FLOTANTE':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,65,66,67,68,71,72,76,87,88,110,113,118,119,126,149,151,152,154,155,156,157,158,160,162,163,168,171,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,242,243,246,247,248,255,256,257,258,259,260,261,263,265,],[13,13,13,13,13,13,13,13,13,13,13,-39,-49,-96,13,13,13,-82,-118,-38,-53,13,-42,-48,13,-83,-84,-54,-40,-50,-51,-86,-55,-58,13,-56,-61,13,-43,-46,-44,-41,-52,-98,13,-88,13,13,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,13,-92,-93,-77,-78,-94,-95,-79,13,-81,-109,13,-80,-110,]),'TIPO_DOUBLE':([0,2,3,17,18,19,20,21,22,23,24,35,37,38,40,53,54,55,65,66,67,68,71,72,76,87,88,110,113,118,119,126,149,151,152,154,155,156,157,158,160,162,163,168,171,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,242,243,246,247,248,255,256,257,258,259,260,261,263,265,],[14,14,14,14,14,14,14,14,14,14,14,-39,-49,-96,14,14,14,-82,-118,-38,-53,14,-42,-48,14,-83,-84,-54,-40,-50,-51,-86,-55,-58,14,-56,-61,14,-43,-46,-44,-41,-52,-98,14,-88,14,14,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,14,-92,-93,-77,-78,-94,-95,-79,14,-81,-109,14,-80,-110,]),'CONDICIONAL':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,65,66,67,71,72,87,88,110,113,118,119,126,149,151,154,155,156,157,158,160,162,163,168,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,243,246,247,248,249,255,256,257,258,259,260,261,263,265,],[28,28,28,28,28,28,28,28,28,-39,-49,-96,28,-82,-118,-38,-53,-42,-48,-83,-84,-54,-40,-50,-51,-86,-55,-58,-56,-61,28,-43,-46,-44,-41,-52,-98,-88,28,28,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,-92,-93,-77,-78,28,-94,-95,-79,28,-81,-109,28,-80,-110,]),'BUCLE_MIENTRAS':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,65,66,67,71,72,87,88,110,113,118,119,126,132,149,151,154,155,156,157,158,160,162,163,168,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,243,246,247,248,255,256,257,258,259,260,261,263,265,],[29,29,29,29,29,29,29,29,29,-39,-49,-96,29,-82,-118,-38,-53,-42,-48,-83,-84,-54,-40,-50,-51,-86,179,-55,-58,-56,-61,29,-43,-46,-44,-41,-52,-98,-88,29,29,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,-92,-93,-77,-78,-94,-95,-79,29,-81,-109,29,-80,-110,]),'HACER':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,65,66,67,71,72,87,88,110,113,118,119,126,149,151,154,155,156,157,158,160,162,163,168,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,243,246,247,248,255,256,257,258,259,260,261,263,265,],[30,30,30,30,30,30,30,30,30,-39,-49,-96,30,-82,-118,-38,-53,-42,-48,-83,-84,-54,-40,-50,-51,-86,-55,-58,-56,-61,30,-43,-46,-44,-41,-52,-98,-88,30,30,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,-92,-93,-77,-78,-94,-95,-79,30,-81,-109,30,-80,-110,]),'BUCLE_PARA':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,65,66,67,71,72,87,88,110,113,118,119,126,149,151,154,155,156,157,158,160,162,163,168,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,243,246,247,248,255,256,257,258,259,260,261,263,265,],[31,31,31,31,31,31,31,31,31,-39,-49,-96,31,-82,-118,-38,-53,-42,-48,-83,-84,-54,-40,-50,-51,-86,-55,-58,-56,-61,31,-43,-46,-44,-41,-52,-98,-88,31,31,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,-92,-93,-77,-78,-94,-95,-79,31,-81,-109,31,-80,-110,]),'RETORNAR':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,65,66,67,71,72,87,88,110,113,118,119,126,149,151,154,155,156,157,158,160,162,163,168,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,243,246,247,248,255,256,257,258,259,260,261,263,265,],[32,32,32,32,32,32,32,32,32,-39,-49,-96,32,-82,-118,-38,-53,-42,-48,-83,-84,-54,-40,-50,-51,-86,-55,-58,-56,-61,32,-43,-46,-44,-41,-52,-98,-88,32,32,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,-92,-93,-77,-78,-94,-95,-79,32,-81,-109,32,-80,-110,]),'ROMPER':([3,17,18,19,20,21,22,23,24,35,37,38,53,55,65,66,67,71,72,87,88,110,113,118,119,126,149,151,154,155,156,157,158,160,162,163,168,174,177,178,195,196,197,199,200,204,205,206,207,209,212,213,214,217,225,227,229,232,233,234,243,246,247,248,255,256,257,258,259,260,261,263,265,],[33,33,33,33,33,33,33,33,33,-39,-49,-96,33,-82,-118,-38,-53,-42,-48,-83,-84,-54,-40,-50,-51,-86,-55,-58,-56,-61,33,-43,-46,-44,-41,-52,-98,-88,33,33,-57,-59,-60,-47,-45,-97,-101,-102,-103,-105,-87,-89,-90,-76,-62,-104,-91,-85,-13,-108,-92,-93,-77,-78,-94,-95,-79,33,-81,-109,33,-80,-110,]),'ASIGNAR':([6,27,34,49,75,116,117,120,122,128,129,134,161,164,165,173,201,203,237,241,],[36,36,69,69,-13,-13,69,36,-71,175,176,182,69,-70,-72,175,-73,-75,252,-74,]),'PUNTO_COMA':([6,27,33,34,49,56,57,58,59,61,62,63,64,73,74,75,85,89,95,96,102,104,105,106,107,109,112,114,115,116,117,120,122,125,135,136,137,138,139,140,141,142,143,144,145,146,147,153,161,164,165,167,169,173,180,181,184,185,186,187,188,189,190,191,192,193,194,201,203,216,222,223,224,228,238,240,241,245,250,253,],[37,37,65,71,71,87,88,-13,-13,-31,-32,-33,-13,118,119,-13,133,-14,-20,-21,-27,-13,-34,-35,-13,-29,155,158,158,-13,71,37,-29,171,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-30,-36,-37,155,71,-70,-72,205,209,214,221,-112,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,-73,-75,232,-113,-13,-114,242,-115,-117,-74,256,260,-116,]),'LLAVE_IZQ':([7,30,39,112,130,131,153,175,249,251,],[40,53,76,156,177,178,156,215,258,261,]),'COMA':([8,9,10,11,12,13,14,34,49,58,59,61,62,63,64,89,95,96,102,104,105,106,107,109,111,114,115,116,117,122,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,161,164,165,166,169,184,185,186,187,188,189,190,191,192,193,194,201,203,223,226,230,231,241,],[-63,-64,-65,-66,-67,-68,-69,70,70,-13,-13,-31,-32,-33,-13,-14,-20,-21,-27,-13,-34,-35,-13,-29,152,159,159,-13,70,-29,183,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-30,-36,-37,152,70,-70,-72,202,208,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,-73,-75,239,202,244,244,-74,]),'PAREN_DER':([8,9,10,11,12,13,14,58,59,61,62,63,64,68,82,83,89,95,96,102,103,104,105,106,107,109,111,121,135,136,137,138,139,140,141,142,143,144,145,146,147,150,152,166,184,185,186,187,188,189,190,191,192,193,194,226,235,236,262,],[-63,-64,-65,-66,-67,-68,-69,-13,-13,-31,-32,-33,-13,112,130,131,-14,-20,-21,-27,145,-13,-34,-35,-13,-29,153,165,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-30,-36,-37,153,112,203,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,203,250,251,-111,]),'LLAVE_DER':([17,18,19,20,21,22,23,24,25,35,37,40,41,42,43,44,45,46,47,48,53,55,58,59,61,62,63,64,65,66,67,71,72,76,77,78,84,87,88,89,95,96,102,104,105,106,107,109,110,113,118,119,123,126,135,136,137,138,139,140,141,142,143,144,145,146,147,149,151,154,155,156,157,158,160,162,163,170,171,174,177,178,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,210,212,213,214,217,218,219,225,229,230,231,232,233,234,242,243,246,247,248,254,255,256,257,258,259,260,261,263,264,265,],[-13,-13,-13,-13,-13,-13,-13,-13,-12,-39,-49,-13,-4,-5,-6,-7,-8,-9,-10,-11,-13,-82,-13,-13,-31,-32,-33,-13,-118,-38,-53,-42,-48,-13,124,-99,132,-83,-84,-14,-20,-21,-27,-13,-34,-35,-13,-29,-54,-40,-50,-51,167,-86,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-30,-36,-37,-55,-58,-56,-61,-13,-43,-46,-44,-41,-52,-100,-13,-88,-13,-13,-15,-16,-17,-18,-19,-22,-23,-24,-25,-26,-28,-57,-59,-60,225,-47,-45,-106,-87,-89,-90,-76,233,234,-62,-91,245,245,-85,-13,-108,-13,-92,-93,-77,-78,-107,-94,-95,-79,-13,-81,-109,-13,-80,265,-110,]),'CORCHETE_IZQ':([27,49,64,75,104,107,116,125,],[50,80,108,108,108,108,108,172,]),'PAREN_IZQ':([28,29,31,32,34,36,49,51,52,60,69,75,90,91,92,93,94,97,98,99,100,101,116,133,159,176,179,182,183,215,220,239,244,252,],[51,52,54,60,68,60,68,60,60,60,60,121,60,60,60,60,60,60,60,60,60,60,121,60,60,60,220,60,60,60,60,60,60,60,]),'CARACTER':([32,36,69,159,215,244,],[57,74,115,115,231,231,]),'NUMERO_DECIMAL':([32,36,51,52,60,69,90,91,92,93,94,97,98,99,100,101,133,159,176,182,183,215,220,239,244,252,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'NUMERO_ENTERO':([32,36,50,51,52,60,69,80,90,91,92,93,94,97,98,99,100,101,108,133,159,172,176,182,183,215,220,239,244,252,],[63,63,81,63,63,63,63,127,63,63,63,63,63,63,63,63,63,63,148,63,63,211,63,63,63,63,63,63,63,63,]),'SUMAR':([58,59,61,62,63,64,75,96,102,104,105,106,107,109,116,122,135,136,137,138,139,140,141,142,143,144,145,146,147,189,190,191,192,193,194,],[90,-13,-31,-32,-33,-13,-13,-21,-27,-13,-34,-35,-13,-29,-13,-29,90,90,90,90,90,-13,-13,-13,-13,-13,-30,-36,-37,-22,-23,-24,-25,-26,-28,]),'RESTAR':([58,59,61,62,63,64,75,96,102,104,105,106,107,109,116,122,135,136,137,138,139,140,141,142,143,144,145,146,147,189,190,191,192,193,194,],[91,-13,-31,-32,-33,-13,-13,-21,-27,-13,-34,-35,-13,-29,-13,-29,91,91,91,91,91,-13,-13,-13,-13,-13,-30,-36,-37,-22,-23,-24,-25,-26,-28,]),'COMPARAR_IGUAL':([58,59,61,62,63,64,75,96,102,104,105,106,107,109,116,122,135,136,137,138,139,140,141,142,143,144,145,146,147,189,190,191,192,193,194,],[92,-13,-31,-32,-33,-13,-13,-21,-27,-13,-34,-35,-13,-29,-13,-29,92,92,92,92,92,-13,-13,-13,-13,-13,-30,-36,-37,-22,-23,-24,-25,-26,-28,]),'MAYOR_QUE':([58,59,61,62,63,64,75,96,102,104,105,106,107,109,116,122,135,136,137,138,139,140,141,142,143,144,145,146,147,189,190,191,192,193,194,],[93,-13,-31,-32,-33,-13,-13,-21,-27,-13,-34,-35,-13,-29,-13,-29,93,93,93,93,93,-13,-13,-13,-13,-13,-30,-36,-37,-22,-23,-24,-25,-26,-28,]),'MENOR_QUE':([58,59,61,62,63,64,75,96,102,104,105,106,107,109,116,122,135,136,137,138,139,140,141,142,143,144,145,146,147,189,190,191,192,193,194,],[94,-13,-31,-32,-33,-13,-13,-21,-27,-13,-34,-35,-13,-29,-13,-29,94,94,94,94,94,-13,-13,-13,-13,-13,-30,-36,-37,-22,-23,-24,-25,-26,-28,]),'MULTIPLICAR':([59,61,62,63,64,75,104,105,106,107,109,116,122,140,141,142,143,144,145,146,147,194,],[97,-31,-32,-33,-13,-13,-13,-34,-35,-13,-29,-13,-29,97,97,97,97,97,-30,-36,-37,-28,]),'DIVIDIR':([59,61,62,63,64,75,104,105,106,107,109,116,122,140,141,142,143,144,145,146,147,194,],[98,-31,-32,-33,-13,-13,-13,-34,-35,-13,-29,-13,-29,98,98,98,98,98,-30,-36,-37,-28,]),'MODULO':([59,61,62,63,64,75,104,105,106,107,109,116,122,140,141,142,143,144,145,146,147,194,],[99,-31,-32,-33,-13,-13,-13,-34,-35,-13,-29,-13,-29,99,99,99,99,99,-30,-36,-37,-28,]),'AND_LOGICO_CONDICIONAL':([59,61,62,63,64,75,104,105,106,107,109,116,122,140,141,142,143,144,145,146,147,194,],[100,-31,-32,-33,-13,-13,-13,-34,-35,-13,-29,-13,-29,100,100,100,100,100,-30,-36,-37,-28,]),'OR_LOGICO_CONDICIONAL':([59,61,62,63,64,75,104,105,106,107,109,116,122,140,141,142,143,144,145,146,147,194,],[101,-31,-32,-33,-13,-13,-13,-34,-35,-13,-29,-13,-29,101,101,101,101,101,-30,-36,-37,-28,]),'PUNTO':([64,75,104,107,116,],[107,107,107,107,107,]),'CORCHETE_DER':([80,81,127,148,211,],[128,129,173,194,228,]),'CASO_CONTRARIO':([233,],[249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,15,]),'SVar':([0,2,3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[2,2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'SStruct':([0,2,],[3,3,]),'empty':([0,2,3,17,18,19,20,21,22,23,24,40,53,58,59,64,75,76,104,107,116,135,136,137,138,139,140,141,142,143,144,156,171,177,178,223,233,242,258,261,],[4,4,25,25,25,25,25,25,25,25,25,78,25,95,102,109,122,78,109,109,122,95,95,95,95,95,102,102,102,102,102,25,78,25,25,240,248,78,25,25,]),'STipos':([0,2,3,17,18,19,20,21,22,23,24,40,53,54,68,76,152,156,171,177,178,242,258,261,],[5,5,26,26,26,26,26,26,26,26,26,79,26,86,111,79,111,26,79,26,26,79,26,26,]),'SInst':([3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[16,41,42,43,44,45,46,47,48,84,198,218,219,218,264,]),'SIfElse':([3,17,18,19,20,21,22,23,24,53,156,177,178,249,258,261,],[18,18,18,18,18,18,18,18,18,18,18,18,18,259,18,18,]),'SWhile':([3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'SDoWhile':([3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'SFor':([3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'SRet':([3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SArr':([3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'SBreak':([3,17,18,19,20,21,22,23,24,53,156,177,178,258,261,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'DVar':([6,27,120,],[35,35,163,]),'AStruct':([7,],[38,]),'ARet':([32,],[55,]),'SOpe':([32,36,51,52,60,69,133,159,176,182,183,215,220,239,244,252,],[56,73,82,83,103,114,180,114,216,223,223,230,235,223,230,262,]),'AOpe':([32,36,51,52,60,69,90,91,92,93,94,133,159,176,182,183,215,220,239,244,252,],[58,58,58,58,58,58,135,136,137,138,139,58,58,58,58,58,58,58,58,58,58,]),'COpe':([32,36,51,52,60,69,90,91,92,93,94,97,98,99,100,101,133,159,176,182,183,215,220,239,244,252,],[59,59,59,59,59,59,59,59,59,59,59,140,141,142,143,144,59,59,59,59,59,59,59,59,59,59,]),'EOpe':([32,36,51,52,60,69,90,91,92,93,94,97,98,99,100,101,133,159,176,182,183,215,220,239,244,252,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FVar':([34,49,],[66,66,]),'AVar':([34,49,117,161,],[67,67,162,200,]),'EVar':([36,],[72,]),'BStruct':([40,76,171,242,],[77,123,210,254,]),'SDecVarFor':([54,],[85,]),'ZOpe':([58,135,136,137,138,139,],[89,184,185,186,187,188,]),'BOpe':([59,140,141,142,143,144,],[96,189,190,191,192,193,]),'FOpe':([64,75,104,107,116,],[105,105,146,147,105,]),'DOpe':([64,75,104,107,116,],[106,106,106,106,106,]),'GVar':([68,152,],[110,196,]),'BVar':([69,159,],[113,199,]),'SFunc':([75,116,],[120,161,]),'AArr':([80,],[126,]),'HVar':([111,],[149,]),'IVar':([111,150,],[151,195,]),'JVar':([112,153,],[154,197,]),'CVar':([114,115,],[157,160,]),'AFunc':([121,],[164,]),'DStruct':([124,167,208,],[168,206,227,]),'FStruct':([125,],[170,]),'CArr':([128,173,],[174,213,]),'ADecVarFor':([134,],[181,]),'BFunc':([166,226,],[201,241,]),'CStruct':([167,],[204,]),'EStruct':([169,],[207,]),'BArr':([173,],[212,]),'AIfElse':([177,258,],[217,263,]),'BDecVarFor':([182,183,239,],[222,224,253,]),'DArr':([215,244,],[229,255,]),'SAsigVarFor':([221,],[236,]),'CDecVarFor':([223,],[238,]),'EArr':([230,231,],[243,246,]),'BIfElse':([233,],[247,]),'CIfElse':([249,],[257,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> SVar program','program',2,'p_program','init.py',2),
  ('program -> SStruct SInst','program',2,'p_program','init.py',3),
  ('program -> empty','program',1,'p_program','init.py',4),
  ('SInst -> SVar SInst','SInst',2,'p_Inst_S','init.py',8),
  ('SInst -> SIfElse SInst','SInst',2,'p_Inst_S','init.py',9),
  ('SInst -> SWhile SInst','SInst',2,'p_Inst_S','init.py',10),
  ('SInst -> SDoWhile SInst','SInst',2,'p_Inst_S','init.py',11),
  ('SInst -> SFor SInst','SInst',2,'p_Inst_S','init.py',12),
  ('SInst -> SRet SInst','SInst',2,'p_Inst_S','init.py',13),
  ('SInst -> SArr SInst','SInst',2,'p_Inst_S','init.py',14),
  ('SInst -> SBreak SInst','SInst',2,'p_Inst_S','init.py',15),
  ('SInst -> empty','SInst',1,'p_Inst_S','init.py',16),
  ('empty -> <empty>','empty',0,'p_empty','parser_yacc.py',16),
  ('SOpe -> AOpe ZOpe','SOpe',2,'p_ope_S','init.py',20),
  ('ZOpe -> SUMAR AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',23),
  ('ZOpe -> RESTAR AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',24),
  ('ZOpe -> COMPARAR_IGUAL AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',25),
  ('ZOpe -> MAYOR_QUE AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',26),
  ('ZOpe -> MENOR_QUE AOpe ZOpe','ZOpe',3,'p_ope_Z','init.py',27),
  ('ZOpe -> empty','ZOpe',1,'p_ope_Z','init.py',28),
  ('AOpe -> COpe BOpe','AOpe',2,'p_ope_A','init.py',32),
  ('BOpe -> MULTIPLICAR COpe BOpe','BOpe',3,'p_ope_B','init.py',36),
  ('BOpe -> DIVIDIR COpe BOpe','BOpe',3,'p_ope_B','init.py',37),
  ('BOpe -> MODULO COpe BOpe','BOpe',3,'p_ope_B','init.py',38),
  ('BOpe -> AND_LOGICO_CONDICIONAL COpe BOpe','BOpe',3,'p_ope_B','init.py',39),
  ('BOpe -> OR_LOGICO_CONDICIONAL COpe BOpe','BOpe',3,'p_ope_B','init.py',40),
  ('BOpe -> empty','BOpe',1,'p_ope_B','init.py',41),
  ('DOpe -> CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER','DOpe',3,'p_ope_D','init.py',45),
  ('DOpe -> empty','DOpe',1,'p_ope_D','init.py',46),
  ('COpe -> PAREN_IZQ SOpe PAREN_DER','COpe',3,'p_ope_C','init.py',50),
  ('COpe -> EOpe','COpe',1,'p_ope_C','init.py',51),
  ('COpe -> NUMERO_DECIMAL','COpe',1,'p_ope_C','init.py',52),
  ('COpe -> NUMERO_ENTERO','COpe',1,'p_ope_C','init.py',53),
  ('EOpe -> IDENTIFICADOR FOpe','EOpe',2,'p_ope_E','init.py',57),
  ('FOpe -> DOpe','FOpe',1,'p_ope_F','init.py',60),
  ('FOpe -> IDENTIFICADOR FOpe','FOpe',2,'p_ope_F','init.py',61),
  ('FOpe -> PUNTO FOpe','FOpe',2,'p_ope_F','init.py',62),
  ('SVar -> STipos IDENTIFICADOR FVar','SVar',3,'p_var_S','init.py',66),
  ('SVar -> IDENTIFICADOR DVar','SVar',2,'p_var_S','init.py',67),
  ('AVar -> ASIGNAR BVar','AVar',2,'p_var_A','init.py',71),
  ('AVar -> COMA IDENTIFICADOR AVar','AVar',3,'p_var_A','init.py',72),
  ('AVar -> PUNTO_COMA','AVar',1,'p_var_A','init.py',73),
  ('BVar -> SOpe CVar','BVar',2,'p_var_B','init.py',77),
  ('BVar -> CARACTER CVar','BVar',2,'p_var_B','init.py',78),
  ('BVar -> IDENTIFICADOR SFunc AVar','BVar',3,'p_var_B','init.py',79),
  ('CVar -> PUNTO_COMA','CVar',1,'p_var_C','init.py',83),
  ('CVar -> COMA BVar','CVar',2,'p_var_C','init.py',84),
  ('DVar -> ASIGNAR EVar','DVar',2,'p_var_D','init.py',88),
  ('DVar -> PUNTO_COMA','DVar',1,'p_var_D','init.py',89),
  ('EVar -> SOpe PUNTO_COMA','EVar',2,'p_var_E','init.py',93),
  ('EVar -> CARACTER PUNTO_COMA','EVar',2,'p_var_E','init.py',94),
  ('EVar -> IDENTIFICADOR SFunc DVar','EVar',3,'p_var_E','init.py',95),
  ('FVar -> AVar','FVar',1,'p_var_F','init.py',99),
  ('FVar -> PAREN_IZQ GVar','FVar',2,'p_var_F','init.py',100),
  ('GVar -> STipos HVar','GVar',2,'p_var_G','init.py',104),
  ('GVar -> PAREN_DER JVar','GVar',2,'p_var_G','init.py',105),
  ('HVar -> IDENTIFICADOR IVar','HVar',2,'p_var_H','init.py',109),
  ('HVar -> IVar','HVar',1,'p_var_H','init.py',110),
  ('IVar -> COMA GVar','IVar',2,'p_var_I','init.py',114),
  ('IVar -> PAREN_DER JVar','IVar',2,'p_var_I','init.py',115),
  ('JVar -> PUNTO_COMA','JVar',1,'p_var_J','init.py',119),
  ('JVar -> LLAVE_IZQ SInst LLAVE_DER','JVar',3,'p_var_J','init.py',120),
  ('STipos -> TIPO_ENTERO','STipos',1,'p_tipos_S','init.py',124),
  ('STipos -> TIPO_CADENA','STipos',1,'p_tipos_S','init.py',125),
  ('STipos -> TIPO_LARGO','STipos',1,'p_tipos_S','init.py',126),
  ('STipos -> TIPO_VACIO','STipos',1,'p_tipos_S','init.py',127),
  ('STipos -> TIPO_CARACTER','STipos',1,'p_tipos_S','init.py',128),
  ('STipos -> TIPO_FLOTANTE','STipos',1,'p_tipos_S','init.py',129),
  ('STipos -> TIPO_DOUBLE','STipos',1,'p_tipos_S','init.py',130),
  ('SFunc -> PAREN_IZQ AFunc','SFunc',2,'p_func_S','init.py',134),
  ('SFunc -> empty','SFunc',1,'p_func_S','init.py',135),
  ('AFunc -> PAREN_DER','AFunc',1,'p_func_A','init.py',139),
  ('AFunc -> IDENTIFICADOR BFunc','AFunc',2,'p_func_A','init.py',140),
  ('BFunc -> COMA IDENTIFICADOR BFunc','BFunc',3,'p_func_B','init.py',144),
  ('BFunc -> PAREN_DER','BFunc',1,'p_func_B','init.py',145),
  ('SIfElse -> CONDICIONAL PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ AIfElse','SIfElse',6,'p_if_S','init.py',149),
  ('AIfElse -> SInst LLAVE_DER BIfElse','AIfElse',3,'p_if_A','init.py',152),
  ('BIfElse -> empty','BIfElse',1,'p_if_B','init.py',155),
  ('BIfElse -> CASO_CONTRARIO CIfElse','BIfElse',2,'p_if_B','init.py',156),
  ('CIfElse -> LLAVE_IZQ AIfElse','CIfElse',2,'p_if_C','init.py',160),
  ('CIfElse -> SIfElse','CIfElse',1,'p_if_C','init.py',161),
  ('SRet -> RETORNAR ARet','SRet',2,'p_ret_S','init.py',165),
  ('ARet -> SOpe PUNTO_COMA','ARet',2,'p_ret_A','init.py',168),
  ('ARet -> CARACTER PUNTO_COMA','ARet',2,'p_ret_A','init.py',169),
  ('SArr -> IDENTIFICADOR CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER ASIGNAR SOpe PUNTO_COMA','SArr',7,'p_arr_S','init.py',173),
  ('SArr -> STipos IDENTIFICADOR CORCHETE_IZQ AArr','SArr',4,'p_arr_S','init.py',174),
  ('AArr -> NUMERO_ENTERO CORCHETE_DER BArr','AArr',3,'p_arr_A','init.py',177),
  ('AArr -> CORCHETE_DER CArr','AArr',2,'p_arr_A','init.py',178),
  ('BArr -> CArr','BArr',1,'p_arr_B','init.py',181),
  ('BArr -> PUNTO_COMA','BArr',1,'p_arr_B','init.py',182),
  ('CArr -> ASIGNAR LLAVE_IZQ DArr','CArr',3,'p_arr_C','init.py',185),
  ('DArr -> SOpe EArr','DArr',2,'p_arr_D','init.py',188),
  ('DArr -> CARACTER EArr','DArr',2,'p_arr_D','init.py',189),
  ('EArr -> COMA DArr','EArr',2,'p_arr_E','init.py',192),
  ('EArr -> LLAVE_DER PUNTO_COMA','EArr',2,'p_arr_E','init.py',193),
  ('SStruct -> ESTRUCTURA AStruct','SStruct',2,'p_struct_S','init.py',196),
  ('AStruct -> IDENTIFICADOR LLAVE_IZQ BStruct LLAVE_DER CStruct','AStruct',5,'p_struct_A','init.py',199),
  ('AStruct -> LLAVE_IZQ BStruct LLAVE_DER DStruct','AStruct',4,'p_struct_A','init.py',200),
  ('BStruct -> empty','BStruct',1,'p_struct_B','init.py',203),
  ('BStruct -> STipos IDENTIFICADOR FStruct','BStruct',3,'p_struct_B','init.py',204),
  ('CStruct -> PUNTO_COMA','CStruct',1,'p_struct_C','init.py',207),
  ('CStruct -> DStruct','CStruct',1,'p_struct_C','init.py',208),
  ('DStruct -> IDENTIFICADOR EStruct','DStruct',2,'p_struct_D','init.py',211),
  ('EStruct -> COMA DStruct','EStruct',2,'p_struct_E','init.py',214),
  ('EStruct -> PUNTO_COMA','EStruct',1,'p_struct_E','init.py',215),
  ('FStruct -> PUNTO_COMA BStruct','FStruct',2,'p_struct_F','init.py',218),
  ('FStruct -> CORCHETE_IZQ NUMERO_ENTERO CORCHETE_DER PUNTO_COMA BStruct','FStruct',5,'p_struct_F','init.py',219),
  ('SWhile -> BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER LLAVE_IZQ SInst LLAVE_DER','SWhile',7,'p_while_S','init.py',222),
  ('SDoWhile -> HACER LLAVE_IZQ SInst LLAVE_DER BUCLE_MIENTRAS PAREN_IZQ SOpe PAREN_DER PUNTO_COMA','SDoWhile',9,'p_dowhile_S','init.py',225),
  ('SFor -> BUCLE_PARA PAREN_IZQ SDecVarFor PUNTO_COMA SOpe PUNTO_COMA SAsigVarFor PAREN_DER LLAVE_IZQ SInst LLAVE_DER','SFor',11,'p_for_S','init.py',228),
  ('SAsigVarFor -> IDENTIFICADOR ASIGNAR SOpe','SAsigVarFor',3,'p_asig_var_for_S','init.py',231),
  ('SDecVarFor -> STipos IDENTIFICADOR ADecVarFor','SDecVarFor',3,'p_dec_var_for_S','init.py',235),
  ('ADecVarFor -> ASIGNAR BDecVarFor','ADecVarFor',2,'p_dec_var_for_A','init.py',238),
  ('ADecVarFor -> COMA BDecVarFor','ADecVarFor',2,'p_dec_var_for_A','init.py',239),
  ('BDecVarFor -> SOpe CDecVarFor','BDecVarFor',2,'p_dec_var_for_B','init.py',243),
  ('CDecVarFor -> COMA BDecVarFor','CDecVarFor',2,'p_dec_var_for_C','init.py',246),
  ('CDecVarFor -> empty','CDecVarFor',1,'p_dec_var_for_C','init.py',247),
  ('SBreak -> ROMPER PUNTO_COMA','SBreak',2,'p_break_S','init.py',251),
]
